DEFINE MAX_BROKER_URI_LENGTH = 256;
DEFINE MAX_CLIENT_ID_LENGTH = 23;
DEFINE MAX_TOPIC_LENGTH = 1024;
DEFINE MAX_PAYLOAD_LENGTH = 1024;
DEFINE MAX_USERNAME_LENGTH = 64;
DEFINE MAX_PASSWORD_LENGTH = 64;

ENUM Qos
{
    QOS0_TRANSMIT_ONCE,
    QOS1_RECEIVE_AT_LEAST_ONCE,
    QOS2_RECEIVE_EXACTLY_ONCE
};

REFERENCE Session;

HANDLER ConnectionLostHandler
(
);

EVENT ConnectionLost
(
    Session session IN,
    ConnectionLostHandler handler IN
);

/*
 * NOTE: This version is not possible because Legato 16.04 doesn't support arrays as handler
 * parameters.
HANDLER MessageArrivedHandler
(
    string topic[MAX_TOPIC_LENGTH] IN,
    uint8 payload[MAX_PAYLOAD_LENGTH] IN
);
*/

REFERENCE Message;

// Temporary API until Legato is enhanced to support arrays as handler parameters
HANDLER MessageArrivedHandler
(
    Message message IN
);

FUNCTION GetMessage
(
    Message message IN,
    string topic[MAX_TOPIC_LENGTH] OUT,
    uint8 payload[MAX_PAYLOAD_LENGTH] OUT
);

EVENT MessageArrived
(
    Session session IN,
    MessageArrivedHandler handler IN
);

FUNCTION le_result_t CreateSession
(
    string brokerURI[MAX_BROKER_URI_LENGTH] IN,
    string clientId[MAX_CLIENT_ID_LENGTH] IN,
    Session session OUT
);

FUNCTION DestroySession
(
    Session session IN
);

FUNCTION SetConnectOptions
(
    Session session IN,
    uint16 keepAliveInterval IN,
    bool cleanSession IN,
    // TODO: will message
    string username[MAX_USERNAME_LENGTH] IN,
    uint8 password[MAX_PASSWORD_LENGTH] IN,
    uint16 connectTimeout IN,
    uint16 retryInterval IN
);

FUNCTION le_result_t Connect
(
    Session session IN
);

FUNCTION le_result_t Disconnect
(
    Session session IN
);

FUNCTION le_result_t Publish
(
    Session session IN,
    string topic[MAX_TOPIC_LENGTH] IN,
    uint8 payload[MAX_PAYLOAD_LENGTH] IN,
    Qos qos IN,
    bool retain IN
);

FUNCTION le_result_t Subscribe
(
    Session session IN,
    string topicPattern[MAX_TOPIC_LENGTH] IN,
    Qos qos IN
);

FUNCTION le_result_t Unsubscribe
(
    Session session IN,
    string topicPattern[MAX_TOPIC_LENGTH] IN
);
